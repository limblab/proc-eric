function [interp_full, error] = ppca_interpolation(data_full, num_pcs)
    % this function runs a linear interpolation on an input set of data
   
    % Inputs
    % data -> array of DeepLabCut tracking data to interpolate
    % Outputs
    % interpolated -> array of DLC tracking with NaNs interpolated
    

    tic
    [coeff,score,pcvar,mu,v,S] = ppca(data,num_pcs);
    toc
    
    %interpolated = S.Recon;
    interpolated = score * coeff' + repmat(mu,length(data),1);
    
            % Compute Error
 
            % for full dataset only,
            full_before = data_full(frames_to_drop,marker);
            dropped_full = interp_full(frames_to_drop,marker);
            
            dont_test = isnan(full_before); %in case some of the randomly dropped markers were already missing
            full_before = full_before(~dont_test);
            dropped_full = dropped_full(~dont_test);
 %           dropped_full_scram = dropped_scram_full(~dont_test);
 
            if sum(sum(isnan(dropped_full))) > 0 %ppca not interpolating long stretches of all markers dropped
                not_interpolated = isnan(dropped_full);
                full_before = full_before(~not_interpolated);
                dropped_full = dropped_full(~not_interpolated);
            end
                
 
             error_full = sum(abs(dropped_full - full_before)) / numel(dropped_full); %different format, but might change if we're looking frame by frame, or at all NaNs
    

end
